environment:
  LEATHERMAN_VERSION: 0.3.5

install:
  - choco install -y mingw-w64 -Version 4.8.3 -source https://www.myget.org/F/puppetlabs
  - choco install -y cmake -Version 3.2.2 -source https://www.myget.org/F/puppetlabs
  - SET PATH=C:\tools\mingw64\bin;%PATH%
  - ps: $env:PATH = $env:PATH.Replace("Git\bin", "Git\cmd")
  - ps: $env:PATH = $env:PATH.Replace("Git\usr\bin", "Git\cmd")

  - ps: wget 'https://s3.amazonaws.com/kylo-pl-bucket/boost_1_58_0-x86_64_mingw-w64_4.8.3_win32_seh.7z' -OutFile "$pwd\boost.7z"
  - ps: 7z.exe x boost.7z -oC:\tools | FIND /V "ing  "

  - ps: wget 'https://s3.amazonaws.com/kylo-pl-bucket/openssl-1.0.0s-x64-windows.tar.lzma' -OutFile "$pwd\openssl.tar.lzma"
  - ps: 7z.exe x openssl.tar.lzma | FIND /V "ing  "
  - ps: 7z.exe x openssl.tar -oC:\tools | FIND /V "ing  "
  - SET OPENSSL_ROOT_DIR=C:\tools
  - SET PATH=C:\tools\bin;%PATH%

  - ps: wget 'https://s3.amazonaws.com/kylo-pl-bucket/curl-7.42.1-x86_64_mingw-w64_4.8.3_win32_seh.7z' -OutFile "$pwd\curl-7.42.1-x86_64_mingw-w64_4.8.3_win32_seh.7z"
  - ps: 7z.exe x "curl-7.42.1-x86_64_mingw-w64_4.8.3_win32_seh.7z" -oC:\tools | FIND /V "ing "

  - ps: wget "https://github.com/puppetlabs/leatherman/releases/download/$env:LEATHERMAN_VERSION/leatherman.7z" -OutFile "$pwd\leatherman.7z"
  - ps: 7z.exe x leatherman.7z -oC:\tools | FIND /V "ing "

  - git clone https://github.com/puppetlabs/cpp-pcp-client
  - cd cpp-pcp-client
  - git checkout master
  - ps: cmake -G "MinGW Makefiles" -DBOOST_ROOT="C:\tools\boost_1_58_0-x86_64_mingw-w64_4.8.3_win32_seh" -DBOOST_STATIC=ON -DCURL_STATIC=ON -DCMAKE_PREFIX_PATH="C:\tools\leatherman;C:\tools\curl-7.42.1-x86_64_mingw-w64_4.8.3_win32_seh" -Wno-dev .
  - ps: mingw32-make install
  - cd ..

build_script:
  - ps: cmake -G "MinGW Makefiles" -DBOOST_ROOT="C:\tools\boost_1_58_0-x86_64_mingw-w64_4.8.3_win32_seh" -DBOOST_STATIC=ON -DCURL_STATIC=ON -Wno-dev -DCMAKE_PREFIX_PATH="C:\tools\leatherman;C:\tools\curl-7.42.1-x86_64_mingw-w64_4.8.3_win32_seh" -DCMAKE_INSTALL_PREFIX=C:\tools .
  - ps: mingw32-make install

test_script:
  - ps: ctest -V 2>&1 | %{ if ($_ -is [System.Management.Automation.ErrorRecord]) { $_ | c++filt } else { $_ } }
